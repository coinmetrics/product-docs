@import url('https://fonts.googleapis.com/css2?family=Lato:wght@400;700&family=Ubuntu+Mono&display=swap');

*, *:after, *:before {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
  outline: none;
  min-height: 0;
  min-width: 0;
}

li, summary {
  list-style: none;
}

fieldset,
dialog {
  border: none;
}

abbr {
  text-decoration: none;
}

fieldset > legend {
  visibility: hidden;
  pointer-events: none;
  font-size: 0;
}

h1, h2, h3, h4, h5, h6, input, select, button, textarea, table {
  font-weight: inherit;
  font-size: inherit;
  font-family: inherit;
}

em, i {
  font-style: italic;
}

strong, b {
  font-weight: bold;
}

label,
summary,
button {
  cursor: pointer;
  line-height: 1;
}

[hidden] {
  display: none!important;
  visibility: hidden!important;
}

input[type="search"]::-webkit-clear-button {
  -webkit-appearance: none;
  appearance: none;
  display: none;
}

.Microlayout-flex-h {
  display: inline-flex;
  align-items: center;
  gap: var(--style-gap-xl);
}

.Microlayout-flex-v {
  display: flex;
  align-items: flex-start;
  gap: var(--style-gap-xl);
  flex-direction: column;
}

.Microlayout-align-v {
  display: inline-flex;
  align-items: center;
  gap: 0.5ch;
}

/**
 * FIXME: !important usage is a stop-gap fix.
 * Need to figure out a solution that works for any element, even those using
 * compound selectors.
 */

@media screen and (min-width: 961px) {
  .Mq-hide-tablet {
    display: none!important;
    visibility: hidden!important;
  }
}

@media screen and (min-width: 1025px) {
  .Mq-hide-small {
    display: none!important;
    visibility: hidden!important;
  }
}

@media screen and (min-width: 1281px) {
  .Mq-hide-desktop {
    display: none!important;
    visibility: hidden!important;
  }
}

@media screen and (min-width: 1441px){
  .Mq-hide-ultrawide {
    display: none!important;
    visibility: hidden!important;
  }
}

@media screen and (max-width: 960px) {
  .Mq-show-tablet {
    display: none!important;
    visibility: hidden!important;
  }
}

@media screen and (max-width: 1024px) {
  .Mq-show-small {
    display: none!important;
    visibility: hidden!important;
  }
}

@media screen and (max-width: 1280px) {
  .Mq-show-desktop {
    display: none!important;
    visibility: hidden!important;
  }
}

@media screen and (max-width: 1440px) {
  .Mq-show-ultrawide {
    display: none!important;
    visibility: hidden!important;
  }
}

:is(cm-switch-checkbox, cm-switch-toggle, cm-switch-radio) input {
  position: absolute;
  opacity: 0;
  pointer-events: none;
}

.Switch-label {
  display: inline-flex;
  line-height: 1;
  align-items: center;
  gap: var(--style-gap-s);
  max-width: max-content;
}

.Switch-icon-on,
.Switch-icon-off,
.Switch-icon-partial {
  color: var(--color-border-default);
}

.Switch-icons {
  display: inline-block;
  line-height: 1;
  border-radius: var(--style-corner-default);
}

.Switch-label:hover input:not([disabled]) + .Switch-icons > :is(.Switch-icon-on, .Switch-icon-off, .Switch-icon-partial),
input:not([disabled]) + .Switch-icons > :is(.Switch-icon-on, .Switch-icon-off, .Switch-icon-partial):hover,
body:not([data-pointer]) :is(cm-switch-checkbox, cm-switch-toggle, cm-switch-radio) input:not([disabled]):focus + .Switch-icons > * {
  color: var(--color-border-attn-default);
}

body:not([data-pointer]) :is(cm-switch-checkbox, cm-switch-toggle, cm-switch-radio) input:not([disabled]):focus + .Switch-icons {
  outline: 2px solid var(--color-focus-outline);
  outline-offset: 1px;
}

:is(cm-switch-checkbox, cm-switch-toggle, cm-switch-radio) input[disabled] + .Switch-icons > * {
  color: var(--color-border-muted);
  cursor: not-allowed;
}

:is(cm-switch-checkbox, cm-switch-toggle, cm-switch-radio) input[disabled] + .Switch-icons .Color-icon-svg {
  opacity: var(--style-disabled-icon-opacity);
}

:is(cm-switch-checkbox, cm-switch-toggle, cm-switch-radio) input[type="checkbox"]:not(:indeterminate) + .Switch-icons > .Switch-icon-partial {
  display: none;
}

:is(cm-switch-checkbox, cm-switch-toggle, cm-switch-radio) input:is([type="checkbox"]:indeterminate, :not(:checked)) + .Switch-icons > .Switch-icon-on {
  display: none;
}

:is(cm-switch-checkbox, cm-switch-toggle, cm-switch-radio) input:is([type="checkbox"]:indeterminate, :checked) + .Switch-icons > .Switch-icon-off {
  display: none;
}

.Switch-group {
  display: flex;
  flex-direction: column;
  gap: var(--style-gap-n);
}

cm-toggler {
  display: inline-block;
  max-width: max-content;
}

.Modal {
  display: flex;
  justify-content: center;
  align-items: center;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 10;
  padding: var(--style-gap-xl) var(--style-gap-xl) calc(2 * var(--style-gap-xl));
  opacity: 0;
  transition: opacity var(--style-animation-speed-normal);
}

.Modal-open {
  opacity: 1;
}

.Modal-click-trap {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: var(--color-modal-backdrop);
  opacity: 0.8;
  cursor: pointer;
}

:root {
  --color-primary-white: #ffffff;
  --color-primary-lighter-purple: #eceef6;
  --color-primary-light-purple: #d2d6e8;
  --color-primary-new-purple: #bac0dd;
  --color-primary-purple: #757ca1;
  --color-primary-medium-purple: #495070;
  --color-primary-dark-purple: #292d3e;
  --color-primary-darker-purple: #1e2130;
  --color-primary-darkest-purple: #161823;
  --color-secondary-yellow: #ffd96f;
  --color-secondary-dark-yellow: #ffc931;
  --color-secondary-darker-yellow: #f1b815;
  --color-secondary-light-red: #fdd8da;
  --color-secondary-red: #f07178;
  --color-secondary-dark-red: #f04c55;
  --color-secondary-darker-red: #e42f39;
  --color-secondary-blue: #89ddff;
  --color-secondary-dark-blue: #63d2ff;
  --color-secondary-darker-blue: #2fbbf4;
  --color-secondary-green: #c3e88d;
  --color-secondary-dark-green: #a7dc5a;
  --color-secondary-darker-green: #8dcd30;
  --color-secondary-green-yellow: #c6cb31;
  --color-secondary-yellow-red-experimental: #f88b43;
  --color-charts-chart-red: #e6194b;
  --color-charts-chart-green: #4eb265;
  --color-charts-chart-yellow: #ffe119;
  --color-charts-chart-blue: #4363d8;
  --color-charts-chart-orange: #ff7a00;
  --color-charts-chart-purple: #9c28b1;
  --color-charts-chart-cyan: #25c6da;
  --color-charts-chart-magenta: #f032e6;
  --color-charts-chart-lime: #bfef45;
  --color-charts-chart-pink: #ff8b7f;
  --color-charts-chart-teal: #019688;
  --color-charts-chart-lavander: #b869c5;
  --color-charts-chart-brown: #795547;
  --color-charts-chart-beige: #fff69e;
  --color-charts-chart-maroon: #800000;
  --color-charts-chart-mint: #aaffc3;
  --color-charts-chart-olive: #808000;
  --color-charts-chart-apricot: #ffd8b1;
  --color-charts-chart-navy: #3939ac;
  --color-charts-chart-grey: #90a4ad;

  --color-text: var(--color-primary-dark-purple);
  --color-bg: var(--color-primary-lighter-purple);
  --color-line: var(--color-primary-dark-purple);
  --color-separator-line-light: var(--color-primary-light-purple);
  --color-separator-line-lighter: var(--color-primary-lighter-purple);
  --color-link: var(--color-secondary-darker-blue);
  --color-focus-outline: var(--color-secondary-dark-blue);

  /** METRIC SCALING */
  --eff-base-size: 14;
  --rem-px: calc(1rem / var(--eff-base-size)); /* 1px expressed in rems */
  --em-px: calc(1em / var(--eff-base-size)); /* 1px expressed in em when 1em == 1rem, scales with parent's font size */

  --style-gap-xs: calc(2 * var(--em-px));
  --style-gap-s: calc(4 * var(--em-px));
  --style-gap-n: calc(8 * var(--em-px));
  --style-gap-l: calc(12 * var(--em-px));
  --style-gap-xl: calc(16 * var(--em-px));
  --style-gap-xxl: calc(24 * var(--em-px));
  --style-gap-xxxl: calc(32 * var(--em-px));
  --style-gap-huge: calc(64 * var(--em-px));

  --style-input-padding-n: var(--style-gap-s) var(--style-gap-n);
  --style-input-padding-l: var(--style-gap-l) var(--style-gap-xl);
  --style-input-h-n: 2.3em;
  --style-input-h-l: 3.4em;
  --style-corner-default: calc(3 * var(--em-px));
  --style-separator-line: 1px solid var(--color-line);
  --style-separator-line-light: 1px solid var(--color-separator-line-light);
  --style-line-lighter: 1px solid var(--color-separator-line-lighter);

  --text-size-s: calc(12 * var(--rem-px));
  --text-size-n: 1rem;
  --text-size-l: calc(18 * var(--rem-px));
  --text-size-xl: calc(24 * var(--rem-px));
  --text-size-xxl: calc(40 * var(--rem-px));
  --text-size-xxxl: calc(56 * var(--rem-px));

  --text-weight-normal: 400;
  --text-weight-bold: 700;
  --text-list-padding: calc(36 * var(--rem-px));  /* ~36px */

  --text-size-input-n: var(--text-size-n);
  --text-size-input-l: var(--text-size-l);

  --style-border-width: 1px;
  --style-border-pressed-wdith: 2px;
  --style-border-type: solid;

  --animation-base-duration: 128ms;
  --style-animation-speed-fast: var(--animation-base-duration);
  --style-animation-speed-normal: calc(2 * var(--animation-base-duration));
  --style-animation-speed-slow: calc(4 * var(--animation-base-duration));

  --style-animation-easing-bazier: cubic-bezier(0.5, -2, 0.5, 3);

  --style-disabled-icon-opacity: 0.3;

  /* Widget styles: default */
  --color-border-default: var(--color-primary-new-purple);
  --color-face-default: transparent;
  --color-label-default: var(--color-primary-dark-purple);
  --color-border-attn-default: var(--color-primary-dark-purple);
  --color-border-pressed-default: var(--color-border-default);
  --color-face-attn-default: var(--color-face-default);
  --color-label-attn-default: var(--color-label-default);
  --color-face-pressed-default: var(--color-primary-light-purple);
  --color-label-pressed-default: var(--color-label-default);

  /* Widget styles: inverse */
  --color-border-inverse: var(--color-primary-dark-purple);
  --color-face-inverse: var(--color-primary-dark-purple);
  --color-label-inverse: var(--color-primary-white);
  --color-border-attn-inverse: var(--color-primary-darkest-purple);
  --color-face-attn-inverse: var(--color-primary-darkest-purple);
  --color-label-attn-inverse: var(--color-label-inverse);
  --color-border-pressed-inverse: var(--color-border-pressed-default);
  --color-face-pressed-inverse: var(--color-face-pressed-default);
  --color-label-pressed-inverse: var(--color-label-pressed-default);

  /* Widget styles: muted */
  --color-border-muted: var(--color-primary-light-purple);
  --color-face-muted: transparent;
  --color-face-muted-opaque: var(--color-primary-light-purple);
  --color-label-muted: var(--color-primary-light-purple);

  /* Widget styles: special (not affected by dark mode) */
  --color-label-always-white: #ffffff;
  --color-label-always-dark-purple: #292d3e;

  /* Widget styles: info (not affected by dark mode) */
  --color-face-info: #89ddff;
  --color-face-attn-info: #89ddff;
  --color-face-pressed-info: #63d2ff;
  --color-border-info: #63d2ff;
  --color-border-attn-info: #2fbbf4;
  --color-border-pressed-info: #2fbbf4;

  /* Widget styles: success (not affected by dark mode) */
  --color-face-success: #c3e88d;
  --color-face-attn-success: #c3e88d;
  --color-face-pressed-success: #a7dc5a;
  --color-border-success: #a7dc5a;
  --color-border-attn-success: #8dcd30;
  --color-border-pressed-success: #8dcd30;

  /* Widget style: done (not affected by dark mode) */
  --color-face-done: #a7dc5a;

  /* Widget styles: warning (not affected by dark mode) */
  --color-face-warning: #ffd96f;
  --color-face-attn-warning: #ffd96f;
  --color-face-pressed-warning: #ffc931;
  --color-border-warning: #ffc931;
  --color-border-attn-warning: #f1b815;
  --color-border-pressed-warning: #f1b815;

  /* Widget styles: error (not affected by dark mode) */
  --color-face-error: #f07178;
  --color-face-attn-error: #f07178;
  --color-face-pressed-error: #f04c55;
  --color-border-error: #f04c55;
  --color-border-attn-error: #e42f39;
  --color-border-pressed-error: #e42f39;

  /** Panel */
  --color-panel-face: var(--color-primary-white);
  --style-panel-border: 1px solid var(--color-line);
  --style-panel-bottom-border: 2px;
  --style-panel-padding: var(--style-gap-xl);

  /** Scrollbar */
  --color-scrollbar-thumb: var(--color-primary-medium-purple);
  --color-scrollbar-track: var(--color-primary-dark-purple);
  --color-scrollbar-inline-track: var(--color-primary-light-purple);
  --style-scrollbar-w: 2px;
  --style-scrollbar-padding-n: var(--style-gap-n);
  --style-scrollbar-padding-l: var(--style-gap-xl);
  --style-scrollbar-track-w-n: calc(var(--style-scrollbar-padding-n) + var(--style-scrollbar-w));
  --style-scrollbar-track-w-l: calc(var(--style-scrollbar-padding-l) + var(--style-scrollbar-w));

  /** Input */
  --color-input-field: var(--color-primary-lighter-purple);
  --color-input-field-attn: var(--color-primary-light-purple);
  --color-input-field-error: var(--color-secondary-light-red);
  --color-input-field-disabled: var(--color-primary-lighter-purple);
  --color-input-border: var(--color-primary-new-purple);
  --color-input-border-attn: var(--color-primary-dark-purple);
  --color-input-border-error: var(--color-secondary-red);
  --color-input-border-disabled: var(--color-primary-light-purple);

  /** Accordion, dropdown, nav-list, etc. */
  --color-selectable-hover-face: var(--color-primary-lighter-purple);
  --color-selectable-hover-label: var(--color-text);

  /** Table */
  --color-table-border: var(--color-primary-lighter-purple);
  --color-table-header-border: var(--color-primary-new-purple);
  --color-table-header-background: var(--color-primary-light-purple);
  --color-table-cell-background: var(--color-primary-white);
  --text-table-main: var(--text-size-s);
  --style-table-padding: var(--style-gap-n);
  --style-table-header-height: calc(40 * var(--rem-px));
  --style-table-cell-height: calc(48 * var(--em-px));
  --text-monospace-font: "Ubuntu Mono", monospace;
  --text-table-numeric-cell-font: var(--text-monospace-font);

  /** Sidebar */
  --color-sidebar-separator: var(--color-primary-medium-purple);
  --color-sidebar-bg: var(--color-primary-dark-purple);
  --color-sidebar-content-bg: var(--color-primary-darkest-purple);
  --color-sidebar-text: var(--color-primary-white);
  --color-sidebar-active-btn-bg: var(--color-primary-darkest-purple);
  --style-sidebar-padding: var(--style-gap-n);
  --style-sidebar-width: calc(var(--style-sidebar-padding) * 2 + calc(32 * var(--rem-px)));
  --style-sidebar-content-padding: var(--style-gap-xxl);

  /** App layout - header */
  --color-app-header-bg: var(--color-bg);
  --style-app-header-h: var(--style-sidebar-width);

  /** Popup **/
  --style-popup-gap: var(--style-gap-n);

  /** Icons */
  --color-border-active-default: var(--color-primary-purple);

  /** Range slider */
  --color-range-slider-track: var(--color-primary-light-purple);
  --color-range-slider-border: var(--color-primary-new-purple);
  --color-range-slider-slider-face: var(--color-primary-white);
  --color-range-slider-slider-border: var(--color-primary-new-purple);
  --color-range-slider-slider-face-disabled: var(--color-primary-lighter-purple);
  --color-range-slider-slider-border-disabled: var(--color-primary-light-purple);
  --color-range-slider-handle-face: var(--color-secondary-blue);
  --color-range-slider-handle-border: var(--color-secondary-darker-blue);
  --color-range-slider-handle-notch: var(--color-range-slider-handle-border);
  --color-range-slider-handle-face-disabled: var(--color-primary-lighter-purple);
  --color-range-slider-handle-border-disabled: var(--color-primary-light-purple);
  --color-range-slider-handle-notch-disabled: var(--color-primary-light-purple);
  --style-range-slider-height: calc(32 * var(--rem-px));
  --style-range-slider-handle-width: calc(0.375 * var(--style-range-slider-height));
  --style-range-slider-notch-height: calc(0.25 * var(--style-range-slider-height));
  --style-range-slider-notch-width: calc(0.5 * var(--style-range-slider-notch-height));

  /** Dialog */
  --color-dialog-titlebar: var(--color-primary-darkest-purple);

  /** Modal */
  --color-modal-backdrop: var(--color-primary-light-purple);
}

.Theme-night-toggle {
  position: absolute;
  opacity: 0;
  pointer-events: none;
}

.Theme-night,
.Theme-night-toggle:checked ~ *,
.Sidebar-extras {
  --color-text: var(--color-primary-white);
  --color-bg: var(--color-primary-darker-purple);
  --color-line: var(--color-primary-white);
  --color-separator-line-lighter: var(--color-primary-medium-purple);
  --color-separator-line-light: var(--color-primary-new-purple);

  /** Accordion, dropdown, nav-list, etc. */
  --color-selectable-hover-face: var(--color-primary-darker-purple);
  --color-selectable-hover-label: var(--color-text);

  /* Widget styles: default */
  --color-border-default: var(--color-primary-purple);
  --color-face-default: transparent;
  --color-label-default: var(--color-primary-white);
  --color-border-attn-default: var(--color-primary-white);
  --color-face-attn-default: var(--color-face-default);
  --color-label-attn-default: var(--color-label-default);
  --color-border-pressed-default: var(--color-primary-darkest-purple);
  --color-face-pressed-default: var(--color-primary-darker-purple);
  --color-label-pressed-default: var(--color-label-default);

  /* Widget styles: inverse */
  --color-border-inverse: var(--color-primary-white);
  --color-face-inverse: var(--color-primary-white);
  --color-label-inverse: var(--color-primary-darker-purple);
  --color-border-attn-inverse: var(--color-primary-white);
  --color-face-attn-inverse: var(--color-primary-lighter-purple);
  --color-label-attn-inverse: var(--color-label-inverse);
  --color-border-pressed-inverse: var(--color-primary-darkest-purple);
  --color-face-pressed-inverse: var(--color-face-pressed-default);
  --color-label-pressed-inverse: var(--color-label-pressed-default);

  /* Widget styles: muted */
  --color-border-muted: var(--color-primary-medium-purple);
  --color-face-muted: transparent;
  --color-face-muted-opaque: var(--color-primary-medium-purple);
  --color-label-muted: var(--color-primary-medium-purple);

  /** Panel */
  --color-panel-face: var(--color-primary-dark-purple);
  --style-panel-border: 1px solid var(--color-line);

  /** Input */
  --color-input-field: var(--color-primary-dark-purple);
  --color-input-field-attn: var(--color-primary-darker-purple);
  --color-input-field-error: var(--color-input-field);
  --color-input-field-disabled: var(--color-primary-dark-purple);
  --color-input-border: var(--color-primary-purple);
  --color-input-border-attn: var(--color-primary-white);
  --color-input-border-disabled: var(--color-primary-medium-purple);

  /** Table */
  --color-table-border: var(--color-primary-medium-purple);
  --color-table-header-border: var(--color-primary-new-purple);
  --color-table-header-background: var(--color-primary-medium-purple);
  --color-table-cell-background: var(--color-primary-dark-purple);

  /** Range slider */
  --color-range-slider-track: var(--color-primary-darker-purple);
  --color-range-slider-border: var(--color-primary-darkest-purple);
  --color-range-slider-slider-face: var(--color-primary-purple);
  --color-range-slider-slider-border: var(--color-primary-medium-purple);
  --color-range-slider-slider-face-disabled: var(--color-primary-medium-purple);
  --color-range-slider-slider-border-disabled: var(--color-primary-darkest-purple);
  --color-range-slider-handle-face: var(--color-secondary-blue);
  --color-range-slider-handle-border: var(--color-secondary-darker-blue);
  --color-range-slider-handle-notch: var(--color-range-slider-handle-border);
  --color-range-slider-handle-face-disabled: var(--color-range-slider-slider-face-disabled);
  --color-range-slider-handle-border-disabled: var(--color-range-slider-slider-border-disabled);
  --color-range-slider-handle-notch-disabled: var(--color-range-slider-slider-border-disabled);

  /** App header */
  --color-app-header-bg: var(--color-bg);

  /** Dialog */
  --color-dialog-titlebar: var(--color-primary-white);

  /** Modal */
  --color-modal-backdrop: var(--color-primary-darkest-purple);
}

.Theme-night-toggle:not(:checked) ~ * .Theme-night-toggle-button cm-icon:last-of-type {
  display: none;
}

.Theme-night-toggle:checked ~ * .Theme-night-toggle-button cm-icon:first-of-type {
  display: none;
}

.Theme-content {
  min-height: 100vh;
  color: var(--color-text);
  background-color: var(--color-bg);
  transition: color var(--style-animation-speed-normal), background-color var(--style-animation-speed-normal);
}


html {
  background: var(--color-bg);
  color: var(--color-text);
  font-size: calc(100% * var(--eff-base-size) / 16); /* by *default*, set font size to 14px in all browsers */
}

body {
  font-family: Lato, sans-serif;
  scrollbar-width: thin; /* not all browsers (any?) support px width */
  scrollbar-width: var(--style-scrollbar-w);
  scrollbar-color: var(--color-scrollbar-thumb) var(--color-scrollbar-track);
}

body::-webkit-scrollbar {
  width: 10px;
  height: 10px;
  background: var(--color-scrollbar-track);
}

body::-webkit-scrollbar-track {
  background-clip: padding-box;
  border: 4px solid var(--color-scrollbar-track);
  background-color: var(--color-scrollbar-track);
}

body::-webkit-scrollbar-thumb {
  background-clip: padding-box;
  border: 4px solid var(--color-scrollbar-track);
  background-color: var(--color-scrollbar-thumb);
}

body:not([data-pointer]) :is(
  *:focus,
  input:is([type=radio], [type=checkbox]):focus + label
) {
  outline: 2px solid var(--color-focus-outline);
  outline-offset: 1px;
}

/* For assistive technology (AT) users only */
.AT-only {
  position: absolute;
  visibility: hidden;
  opacity: 0;
  pointer-events: none;
}

body:not([data-pointer]) label:focus {
  border-radius: var(--style-corner-default);
}

.Accordion > summary {
  display: flex;
  align-items: center;
  justify-content: space-between;
  cursor: pointer;
  gap: 0 var(--style-gap-n);
  width: 100%;
  border: 0;
  padding: var(--style-gap-n);
  background-color: var(--color-face-default);
  color: var(--color-label-default);
  font-weight: var(--text-weight-bold);
  transition:
    color var(--style-animation-speed-normal),
    background-color var(--style-animation-speed-normal);
}

.Accordion > summary:is(:hover, :focus) {
  background-color: var(--color-selectable-hover-face);
  color: var(--color-selectable-hover-label);
}

.Accordion[open] > summary {
  background-color: var(--color-face-inverse);
  color: var(--color-label-inverse);
}

.Accordion > summary > cm-icon:last-child {
  transition: transform var(--style-animation-speed-fast)
}

.Accordion[open] > summary > cm-icon:last-child {
  transform: rotate(180deg);
}

.Accordion[open] > .Accordion-content {
  padding: var(--style-gap-n);
  visibility: visible;
}

.Accordion > summary ~ * {
  padding: var(--style-gap-n);
}

.Accordion-content-collapsed {
  overflow: hidden;
  height: 0;
}

.AppLayout-header {
  --app-layout-header-padding-v: var(--style-gap-l);
  --app-layout-header-padding: var(--style-gap-xl);
  position: fixed;
  top: 0;
  left: 0;
  right: var(--style-sidebar-width);
  height: var(--style-app-header-h);
  padding: var(--app-layout-header-padding-v) var(--app-layout-header-padding);
  display: flex;
  align-items: center;
  gap: var(--style-gap-n);
  background-color: var(--color-app-header-bg);
  transition: color var(--style-animation-speed-normal), background-color var(--style-animation-speed-normal);
  z-index: 3;
}

.AppLayout-header::after {
  content: '';
  display: block;
  position: absolute;
  bottom: 0;
  left: var(--app-layout-header-padding);
  right: var(--app-layout-header-padding);
  height: var(--style-border-width);
  background: var(--color-line);
  border-radius: var(--style-border-width);
  transition: background-color var(--style-animation-speed-normal);
}

.AppLayout-main {
  margin-top: var(--style-app-header-h);
  margin-right: var(--style-sidebar-width);
  padding: var(--style-gap-xl);
  min-height: calc(100vh - var(--style-app-header-h));
}

.AppLayout-main-fullscreen {
  max-height: calc(100vh - var(--style-app-header-h));
  overflow: hidden;
}

.AppLayout-main,
.AppLayout-col {
  display: flex;
  flex-direction: column;
  gap: var(--style-gap-xl);
}

@media screen and (min-width: 600px) {
  .AppLayout-row,
  .AppLayout-row-stretch,
  .AppLayout-row-stretch-full {
    display: flex;
    gap: var(--style-gap-xl);
  }

  .AppLayout-row {
    align-items: flex-start;
  }

  .AppLayout-row-stretch {
    align-items: stretch;
  }

  .AppLayout-row-stretch-full {
    align-items: stretch;
    height: 100%;
    flex-grow: 1;
  }
}

.AppLayout-logo {
  height: 20px;
}

.AppLayout-side {
  max-width: max-content;
  flex-grow: 0;
  flex-shrink: 0;
}

.Button,
.Button-primary,
.Button-info,
.Button-success,
.Button-warning,
.Button-error {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  gap: var(--style-gap-n);
  box-sizing: border-box;
  border-radius: var(--style-corner-default);
  cursor: pointer;
  vertical-align: middle;
  flex-shrink: 0;

  height: var(--style-input-h-n);
  font-size: var(--text-size-input-n);
  padding: var(--style-input-padding-n);

  background-color: var(--color-face-default);
  color: var(--color-label-default);
  border: var(--style-border-width) var(--style-border-type) var(--color-border-default);
  box-shadow: inset 0 var(--style-border-pressed-wdith) transparent;

  transition:
    border-color var(--style-animation-speed-fast),
    color var(--style-animation-speed-fast),
    box-shadow var(--style-animation-speed-fast),
    background-color var(--style-animation-speed-fast),
    border-width var(--style-animation-speed-fast);
}

.Button-l {
  font-size: var(--text-size-input-l);
}

.Button-primary {
  background-color: var(--color-face-inverse);
  color: var(--color-label-inverse);
  border-color: var(--color-border-inverse);
}

.Button:hover,
.Button:focus,
.Button-active,
input:is([type=radio], [type=checkbox]):focus + .Button {
  background-color: var(--color-face-attn-default);
  color: var(--color-label-attn-default);
  border-color: var(--color-border-attn-default);
}

.Button-primary:hover,
.Button-primary:focus,
input:is([type=radio], [type=checkbox]):focus > .Button-primary {
  background-color: var(--color-face-attn-inverse);
  color: var(--color-label-attn-inverse);
  border-color: var(--color-border-attn-inverse);
}

.Button:enabled:active,
.Button-primary:enabled:active {
  background-color: var(--color-face-pressed-default);
  color: var(--color-label-pressed-default);
  border-color: var(--color-border-pressed-default);
  box-shadow: inset 0 var(--style-border-pressed-wdith) var(--color-border-pressed-default);
}

.Button-info,
.Button-success,
.Button-warning {
  color: var(--color-label-always-dark-purple);
}

.Button-error {
  color: var(--color-label-always-white);
}

.Button-info {
  background-color: var(--color-face-info);
  border-color: var(--color-border-info);
}

.Button-info:hover,
.Button-info:focus,
input:checked + .Button-info {
  background-color: var(--color-face-attn-info);
  border-color: var(--color-border-attn-info);
}

.Button-info:enabled:active {
  background-color: var(--color-face-pressed-info);
  border-color: var(--color-border-pressed-info);
  box-shadow: inset 0 var(--style-border-pressed-wdith) var(--color-border-pressed-info);
}

.Button-success {
  background-color: var(--color-face-success);
  border-color: var(--color-border-success);
}

.Button-success:hover,
.Button-success:focus,
input:focus + .Button-success {
  background-color: var(--color-face-attn-success);
  border-color: var(--color-border-attn-success);
}

.Button-success:enabled:active {
  background-color: var(--color-face-pressed-success);
  border-color: var(--color-border-pressed-success);
  box-shadow: inset 0 var(--style-border-pressed-wdith) var(--color-border-pressed-success);
}

.Button-warning {
  background-color: var(--color-face-warning);
  border-color: var(--color-border-warning);
}

.Button-warning:hover,
.Button-warning:focus {
  background-color: var(--color-face-attn-warning);
  border-color: var(--color-border-attn-warning);
}

.Button-warning:enabled:active {
  background-color: var(--color-face-pressed-warning);
  border-color: var(--color-border-pressed-warning);
  box-shadow: inset 0 var(--style-border-pressed-wdith) var(--color-border-pressed-warning);
}

.Button-error {
  background-color: var(--color-face-error);
  border-color: var(--color-border-error);
}

.Button-error:hover,
.Button-error:focus {
  background-color: var(--color-face-attn-error);
  border-color: var(--color-border-attn-error);
}

.Button-error:enabled:active {
  background-color: var(--color-face-pressed-error);
  border-color: var(--color-border-pressed-error);
  box-shadow: inset 0 var(--style-border-pressed-wdith) var(--color-border-pressed-error);
}

:is(
  .Button,
  .Button-primary,
  .Button-info,
  .Button-success,
  .Button-warning,
  .Button-error
)[disabled],
[disabled] :is(
  .Button,
  .Button-primary,
  .Button-info,
  .Button-success,
  .Button-warning,
  .Button-error
),
input:is([type=radio], [type=checkbox])[disabled] > :is(
  .Button,
  .Button-primary,
  .Button-info,
  .Button-success,
  .Button-warning,
  .Button-error
) {
  background-color: var(--color-face-muted);
  color: var(--color-label-muted);
  border-color: var(--color-border-muted);
  cursor: not-allowed;
}

:is(
  :is(
    .Button,
    .Button-primary,
    .Button-info,
    .Button-success,
    .Button-warning,
    .Button-error,
    .Button-clear,
    .Button-clear-inverse
  )[disabled],
  [disabled] :is(
    .Button,
    .Button-primary,
    .Button-info,
    .Button-success,
    .Button-warning,
    .Button-error,
    .Button-clear,
    .Button-clear-inverse
  ),
  input:is([type=radio], [type=checkbox])[disabled] > :is(
    .Button,
    .Button-primary,
    .Button-info,
    .Button-success,
    .Button-warning,
    .Button-error,
    .Button-clear,
    .Button-clear-inverse
  )
) :is(.Color-icon-svg, .Coin-svg) {
  opacity: var(--style-disabled-icon-opacity);
}

:is(
  .Button,
  .Button-primary,
  .Button-info,
  .Button-success,
  .Button-warning,
  .Button-error
) > :is(cm-icon, cm-color-icon):first-child {
  margin-left: -4px;
}

:is(
  .Button,
  .Button-primary,
  .Button-info,
  .Button-success,
  .Button-warning,
  .Button-error
) > :is(cm-icon, cm-color-icon):last-child {
  margin-right: -4px;
}

.Button-clear {
  border: none;
  background: transparent;
  cursor: pointer;
  color: var(--color-label-default);
  border-radius: var(--style-corner-default);
  flex-shrink: 0;
}

.Button-clear-inverse {
  color: var(--color-label-inverse);
  flex-shrink: 0;
}

:is(.Button-clear, .Button-clear-inverse)[disabled],
[disabled] :is(.Button-clear, .Button-clear-inverse) {
  color: var(--color-label-muted);
}

.Button-active,
[open] > .Button,
input:checked + .Button {
  position: relative;
  top: -1px;
  box-shadow: inset 0 -1px 0 var(--color-border-attn-default);
  border-color: var(--color-border-attn-default);
}

cm-coin {
  display: inline-block;
  width: max-content;
  height: max-content;
  flex-shrink: 0;
  vertical-align: baseline;
}

.Coin-svg {
  /** 24px **/
  width: 1.71rem;
  height: 1.71rem;
}

.Coin-s > .Coin-svg {
  /** 16px **/
  width: 1.14rem;
  height: 1.14rem;
}

.Coin-l > .Coin-svg {
  /** 40px **/
  width: 2.86rem;
  height: 2.86rem;
}

.Coin-xl > .Coin-svg {
  /** 68px **/
  width: 4.86rem;
  height: 4.86rem;
}

.Coin-sprite-hider {
  overflow: hidden;
  width: 0;
  height: 0;
  position: fixed;
  top: -1px;
  left: -1px;
}

cm-color-icon {
  display: inline-block;
  flex-shrink: 0;
  vertical-align: baseline;
}

.Color-icon-svg {
  fill: none;
  transition:
    stroke var(--style-animation-speed-fast),
    transform var(--style-animation-speed-fast);
  /** 24px **/
  width: 1.71rem;
  height: 1.71rem;
}

.Icon-s > .Color-icon-svg {
  /** 16px **/
  width: 1.14rem;
  height: 1.14rem;
}

.Icon-sprite-hider {
  overflow: hidden;
  width: 0;
  height: 0;
  position: fixed;
  top: -1px;
  left: -1px;
}

.Icon-flip180 > .Color-icon-svg {
  transform: rotateX(180deg);
}

.Dialog {
  border-radius: var(--style-corner-default);
  display: flex;
  flex-direction: column;
  width: max-content;
  z-index: 1;
}

.Dialog-titlebar {
  background-color: var(--color-dialog-titlebar);
  color: var(--color-label-inverse);
  display: flex;
  align-items: center;
  justify-content: center;
  text-transform: uppercase;
  font-weight: var(--text-weight-bold);
  padding: 0 var(--style-gap-xl);
  height: var(--style-input-h-n);
  flex-shrink: 0;
  border-top-left-radius: var(--style-corner-default);
  border-top-right-radius: var(--style-corner-default);
  transition: color var(--style-animation-speed-normal), background-color var(--style-animation-speed-normal);
}

.Dialog-titlebar + .Panel {
  border-top: 0;
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}

.Dialog-button-bar {
  display: flex;
  justify-content: flex-end;
  gap: var(--style-gap-n);
  margin-top: var(--style-gap-n);
  padding: var(--style-gap-xl) 0 0;
  border-top: 1px solid var(--color-border-inverse);
}

cm-dropdown {
  display: inline-block;
  position: relative;
  pointer-events: all;
  max-width: max-content;
}

cm-dropdown > fieldset[disabled] {
  cursor: not-allowed;
}

cm-dropdown > fieldset[disabled] > * {
  pointer-events: none;
}

.Dropdown > fieldset {
  --dropdown-top: auto;
  --dropdown-left: auto;
  --dropdown-right: auto;
  --dropdown-bottom: auto;
  position: fixed;
  top: var(--dropdown-top);
  left: var(--dropdown-left);
  right: var(--dropdown-right);
  bottom: var(--dropdown-bottom);
  border: var(--style-panel-border);
  border-bottom-width: var(--style-panel-bottom-border);
  padding: var(--style-gap-n);
  border-radius: var(--style-corner-default);
  background: var(--color-panel-face);
  width: max-content;
  z-index: 2;
  scrollbar-width: thin; /* not all browsers (any?) support px width */
  scrollbar-width: var(--style-scrollbar-w);
  scrollbar-color: var(--color-scrollbar-thumb) transparent;
  max-height: 40vh;
  min-width: 80px;
  overflow-y: auto;
  transition:
    color var(--style-animation-speed-fast),
    border-color var(--style-animation-speed-fast),
    background-color var(--style-animation-speed-fast);
}

.Dropdown > fieldset label {
  cursor: pointer;
}

.Dropdown > fieldset::-webkit-scrollbar {
  background: transparent;
}

.Dropdown > fieldset::-webkit-scrollbar-thumb {
  background-clip: padding-box;
  background-color: var(--color-scrollbar-thumb);
  border-left: var(--style-scrollbar-padding-n) solid transparent;
}

.Dropdown > fieldset::-webkit-scrollbar-track {
  background-clip: padding-box;
  background-color: var(--color-scrollbar-inline-track);
}

.Dropdown > fieldset::-webkit-scrollbar-track,
.Dropdown > fieldset::-webkit-scrollbar-thumb {
  border-left: var(--style-scrollbar-padding-n) solid transparent;
}

.Dropdown > summary > cm-icon {
  transition: transform var(--style-animation-speed-slow);
}

.Dropdown[open] {
  background: var(--color-label-inverse);
}

.Dropdown[open] > .Button > cm-icon {
  transform: rotate(180deg);
}

.Dropdown > fieldset input {
  position: absolute;
  opacity: 0;
  width: 0;
  height: 0;
}

.Dropdown > fieldset input:checked + label:hover {
  color: var(--color-label-inverse);
}

.Button *:first-child {
  display: flex;
  align-items: center;
  flex-direction: row;
  gap: 8px;
}

.Button *:first-child > cm-icon {
  margin-left: -4px;
}

cm-icon {
  display: inline-block;
  flex-shrink: 0;
  vertical-align: baseline;
}

.Icon-svg {
  stroke: currentColor;
  stroke-linecap: round;
  fill: none;
  transition:
    stroke var(--style-animation-speed-fast),
    transform var(--style-animation-speed-fast);

  stroke-width: 0.11rem;
  /** 24px **/
  width: 1.71rem;
  height: 1.71rem;
}

.Icon-s > .Icon-svg {
  stroke-width: 0.142rem;
  /** 16px **/
  width: 1.14rem;
  height: 1.14rem;
}

.Icon-sprite-hider {
  overflow: hidden;
  width: 0;
  height: 0;
  position: fixed;
  top: -1px;
  left: -1px;
}

.Icon-flip180 > .Icon-svg {
  transform: rotateX(180deg);
}

.Icon-spin > .Icon-svg {
  transform-origin: center;
  animation: Icon-spin var(--style-animation-easing-bazier) infinite 2s;
}

@keyframes Icon-spin {
  from {  transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

.Input,
.Input-l {
  background: var(--color-input-field);
  border: var(--style-border-width) solid var(--color-input-border);
  color: var(--color-label-default);
  border-radius: var(--style-corner-default);
  font-family: inherit;
  font-size: var(--text-size-input-n);
  width: 100%;
  transition:
    border-color var(--style-animation-speed-normal),
    background-color var(--style-animation-speed-normal),
    color var(--style-animation-speed-normal);
}

.Input {
  padding: var(--style-input-padding-n);
  height: var(--style-input-h-n);
}

.Input-l {
  padding: var(--style-input-padding-l);
  height: var(--style-input-h-l);
}

.Input::placeholder,
.Input-l::placeholder {
  color: var(--color-input-border);
  transition: color var(--style-animation-speed-normal);
}

:is(.Input, .Input-l):disabled {
  background-color: var(--color-input-field-disabled);
  border-color: var(--color-input-border-disabled);
}
:is(.Input, .Input-l):disabled::placeholder,
:is(.Input, .Input-l):disabled:is(:hover, :focus)::placeholder {
  color: var(--color-input-border-disabled);
}

:is(.Input, .Input-l):not(:disabled):hover {
  border-color: var(--color-input-border-attn);
}

:is(.Input, .Input-l):not(:disabled):focus {
  box-shadow: inset 0 2px 0 var(--color-input-border);
  background: var(--color-input-field-attn);
}

:is(.Input, .Input-l):is(:hover, :focus)::placeholder {
  color: var(--color-input-border);
}

.Input-with-icon {
  width: 100%;
  display: inline-block;
  position: relative;
  height: max-content;
}

.Input-with-icon > .Input + * {
  position: absolute;
  right: calc(var(--style-gap-n) - var(--style-border-width));
  top: calc(var(--style-gap-s) - var(--style-border-width));
}

.Input-with-icon > .Input-l + * {
  position: absolute;
  right: calc(var(--style-gap-xl) - var(--style-border-width));
  top: calc(var(--style-gap-l) - var(--style-border-width));
}

.Input-with-icon > .Input {
  padding-right: calc(var(--style-border-width) + var(--style-gap-n) + 24px);
}

.Input-error {
  border-color: var(--color-input-border-error);
  background: var(--color-input-field-error);
  color: var(--color-input-border-error);
}

.Input-error::placeholder {
  color: var(--color-input-border-error);
}

.Input-label {
  display: flex;
  flex-direction: column;
  gap: var(--style-gap-n);
}

.Line-h-light,
.Line-h-dark,
.Line-v-light,
.Line-v-dark {
  border-radius: 1px;
  border: none;
  flex-shrink: 0;
  transition: background-color var(--style-animation-speed-normal);
}

.Line-h-light,
.Line-h-dark {
  display: block;
  width: 100%;
  height: 1px;
}

.Line-v-light,
.Line-v-dark {
  display: inline-block;
  height: 100%;
  min-height: 1.2em;
  width: 1px;
  vertical-align: middle;
}

.Line-h-light,
.Line-v-light {
  background: var(--color-separator-line-light);
}

.Line-h-dark,
.Line-v-dark {
  background: var(--color-line);
}

.Link {
  text-decoration: underline;
}

.Link:hover,
.Link:focus {
  text-decoration: none;
}

.Link,
.Link:visited,
.Link:active {
  color: var(--color-link);
}

.List-item,
.Dropdown > fieldset label {
  display: flex;
  align-items: center;
  padding: var(--style-gap-n);
  border-top: var(--style-line-lighter);
  min-width: 100%;
  min-height: 32px;
  transition: color var(--style-animation-speed-fast),
  border-color var(--style-animation-speed-fast),
  background-color var(--style-animation-speed-fast);
  gap: var(--style-gap-n);
}

.List-button {
  background: transparent;
  justify-content: space-between;
  border-left: none;
  border-bottom: none;
  border-right: none;
  cursor: pointer;
}

.List-item:last-of-type,
.Dropdown > fieldset label:last-of-type {
  border-bottom: var(--style-line-lighter);
}

.List-button:hover,
.Dropdown > fieldset label:hover,
.Dropdown > fieldset input:focus + label {
  background: var(--color-selectable-hover-face);
  color: var(--color-selectable-hover-label);
}

.List-selected,
.Dropdown > fieldset input:checked + :is(label, label:hover, label:focus) {
  background: var(--color-face-inverse);
  color: var(--color-label-inverse);
}

.Mobile-menu-panel {
  position: fixed;
  top: 0;
  bottom: 0;
  right: 0;
  transform: translateX(100%);
  transition: transform var(--style-animation-speed-slow);
  background-color: var(--color-sidebar-bg);
  z-index: 1;
  width: 100vw;
  display: flex;
  justify-content: space-between;
}

.Mobile-menu-panel > * {
  opacity: 0;
}

.Mobile-menu-panel[open] {
  transform: translateX(0);
}

.Mobile-menu-panel[open] > * {
  opacity: 1;
}

.Mobile-menu-content {
  flex: 1 1 auto;
  padding: 0 calc(var(--style-sidebar-padding) * 2);
}

.Mobile-menu-header {
  height: var(--style-app-header-h);
  display: flex;
  align-items: center;
}

.Mobile-menu-header img {
  height: 16px;
}

.Mobile-menu-toolbar {
  flex: 0 0 auto;
  width: var(--style-sidebar-width);
  padding: var(--style-sidebar-padding);
  display: flex;
  flex-direction: column;
  gap: var(--style-sidebar-padding);
}

.Mobile-menu-list {
  color: var(--color-sidebar-text);
}

.Mobile-menu-list > li > *:first-child {
  font-weight: bold;
  font-size: 18px;
  line-height: 22px;
  text-transform: uppercase;
  padding: var(--style-gap-l) var(--style-gap-n);
  border-bottom: 1px solid var(--color-sidebar-separator);
  cursor: pointer;
}

.Mobile-menu-list li ul li > a {
  font-size: 14px;
  padding: var(--style-gap-l) var(--style-gap-xl);
  border-bottom: 1px solid var(--color-sidebar-separator);
}

.Mobile-menu-list li > *:first-child:hover {
  background-color: var(--color-mobile-menu-hover);
}

.Mobile-menu-list a {
  display: block;
  text-decoration: none;
  display: flex;
  align-items: center;
}

.Mobile-menu-list a {
  color: var(--color-sidebar-text)
}

@media screen and (min-width: 1350px) {
  cm-toggler.Mobile-menu-button,
  cm-toggler.Mobile-menu-button + hr {
    display: none;
  }
  .Mobile-menu-panel[open] {
    transform: translateX(100%);
  }
  .Mobile-menu-panel > * {
    opacity: 0 !important;
  }
}

/** Level 1 items */

.NavList {
  --style-list-level2-padding: 0.8rem;
}

.NavList :is(
  li > :is(a, button),
  .NavList-l2-header > :is(a, button)
) {
  display: flex;
  cursor: pointer;
  align-items: center;
  gap: var(--style-gap-n);
  color: inherit;
  width: 100%;
  border: none;
  background: none;
  transition: color var(--style-animation-speed-normal), background-color var(--style-animation-speed-normal);
}

.NavList :is(a, button):is(:hover, :focus),
.NavList .NavList-l2-header:is(:hover, :focus),
.NavList .NavList-l2-header:is(:hover, :focus) > a,
.NavList-l2-header:focus-within {
  background-color: var(--color-selectable-hover-face);
  color: var(--color-selectable-hover-label);
}

body:not([data-pointer]) :is(
  .NavList :is(a, button):focus,
  .NavList .NavList-l2-header:focus,
  .NavList .NavList-l2-header:focus > a,
  .NavList-l2-header:focus-within
) {
  border-radius: var(--style-corner-default);
}

.NavList .NavList-l2-header {
  padding: 0 var(--style-gap-n) 0 0;
}

.NavList a {
  text-decoration: none;
}

.NavList > li > :is(a, button),
.NavList-l2-header > :is(a, button) {
  font-weight: var(--text-weight-bold);
  font-size: var(--text-size-l);
  padding: var(--style-gap-n);
}

/** Level 2 items */

.NavList > li ul > li > :is(a, button) {
  padding: var(--style-gap-n);
  padding-left: var(--style-list-level2-padding);
  position: relative;
  border: none;
  background: none;
}

/* Selected */

.NavList li {
  transition:
    color var(--style-animation-speed-fast),
    background-color var(--style-animation-speed-fast);
}

.NavList .NavList-selected > :is(a, a:hover, a:focus, button, button:hover, button:focus),
.NavList .NavList-selected :is(.NavList-l2-header, .NavList-l2-header:hover, .NavList-l2-header:focus),
.NavList .NavList-selected .NavList-l2-header > :is(a, a:hover, a:focus, button, button:hover, button:focus),
.NavList details[open] :is(.NavList-l2-header, .NavList-l2-header:hover, .NavList-l2-header:focus) {
  background: var(--color-face-inverse);
  color: var(--color-label-inverse);
}

cm-paginator {
  display: flex;
  gap: var(--style-gap-n);
  align-items: center;
}

.Paginator-first,
.Paginator-last,
.Paginator-next,
.Paginator-prev,
.Paginator-page,
.Paginator-page-m {
  min-width: 4.5ch;
}

@media screen and (max-width: 680px) {
  .Paginator-first,
  .Paginator-last,
  .Paginator-more-prev,
  .Paginator-more-next,
  .Paginator-next,
  .Paginator-prev,
  .Paginator-page {
    display: none;
    visibility: hidden;
  }
}

@media screen and (min-width: 681px) {
  .Paginator-start,
  .Paginator-end,
  .Paginator-page-m {
    display: none;
    visibility: hidden;
  }
}

.Panel {
  border: var(--style-panel-border);
  border-bottom-width: var(--style-panel-bottom-border);
  padding: var(--style-gap-xl);
  border-radius: var(--style-corner-default);
  background: var(--color-panel-face);
  display: flex;
  flex-direction: column;
  gap: var(--style-gap-xl);
  width: 100%;
  transition: border-color var(--style-animation-speed-normal), background-color var(--style-animation-speed-normal);
  min-width: 30ch;
}

cm-popup {
  display: inline-block;
  position: relative;
  max-width: max-content;
  max-height: max-content;
  flex-shrink: 0;
}

cm-popup[disabled] {
  pointer-events: none;
}

.Popup-dialog {
  --popup-dialog-top: auto;
  --popup-dialog-left: auto;
  --popup-dialog-right: auto;
  --popup-dialog-bottom: auto;
  position: fixed;
  top: var(--popup-dialog-top);
  left: var(--popup-dialog-left);
  right: var(--popup-dialog-right);
  bottom: var(--popup-dialog-bottom);
  z-index: 2;
}

cm-range-slider {
  --slider-left: 0;
  --slider-right: 0;

  display: inline-block;
  width: 100%;
  padding: 0 calc(var(--style-range-slider-handle-width) / 2 + var(--style-gap-xs));
  background-color: var(--color-range-slider-track);
  border: 1px solid var(--color-range-slider-border);
  box-shadow: inset 0 1px var(--color-range-slider-border);
  border-radius: var(--style-corner-default);
}

cm-range-slider[disabled] {
  cursor: not-allowed;
}

cm-range-slider[disabled] > .RangeSlider {
  pointer-events: none;
}

.RangeSlider {
  position: relative;
  width: 100%;
  touch-action: none;
  height: var(--style-range-slider-height);
}

.RangeSlider-slider {
  position: absolute;
  top: 0;
  bottom: 0;
  left: var(--slider-left);
  right: var(--slider-right);
  padding: var(--style-gap-s) 0;
  cursor: move;
}

.RangeSlider-slider::before {
  content: '';
  display: block;
  height: 100%;
  border-radius: var(--style-corner-default);
  background-color: var(--color-range-slider-slider-face);
  border: 1px solid var(--color-range-slider-slider-border);
  box-shadow: 0 0.07rem 0 var(--color-range-slider-slider-border);
}

.RangeSlider-handle-l,
.RangeSlider-handle-r {
  position: absolute;
  top: 0;
  bottom: 0;
  width: var(--style-range-slider-handle-width);
  cursor: ew-resize;
  padding: var(--style-gap-n) 0;
}

:is(.RangeSlider-handle-l, .RangeSlider-handle-r)::before {
  position: relative;
  left: 50%;
  transform: translateX(-50%);
  content: '';
  display: block;
  background: var(--color-range-slider-handle-face);
  border: 1px solid var(--color-range-slider-handle-border);
  box-shadow: 0 0.07rem var(--color-range-slider-handle-border);
  border-radius: calc(var(--style-corner-default) * 0.66);
  width: var(--style-range-slider-handle-width);
  height: 100%;
}

:is(.RangeSlider-handle-l, .RangeSlider-handle-r)::after {
  content: '';
  height: var(--style-range-slider-notch-height);
  position: absolute;
  width: var(--style-range-slider-notch-width);
  border-left:1px solid var(--color-range-slider-handle-notch);
  border-right:1px solid var(--color-range-slider-handle-notch);
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.RangeSlider-handle-l {
  left: 0;
  transform: translateX(-50%);
}

.RangeSlider-handle-r {
  right: 0;
  transform: translateX(50%);
}

cm-range-slider[disabled] .RangeSlider-slider::before {
  background-color: var(--color-range-slider-slider-face-disabled);
  border-color: var(--color-range-slider-slider-border-disabled);
  box-shadow: inset 0 1px 0 var(--color-range-slider-slider-border-disabled);
}

cm-range-slider[disabled] :is(.RangeSlider-handle-l, .RangeSlider-handle-r)::before {
  background-color: var(--color-range-slider-handle-face-disabled);
  border-color: var(--color-range-slider-handle-border-disabled);
  box-shadow: 0 1px 0 var(--color-range-slider-handle-border-disabled);
}

cm-range-slider[disabled] :is(.RangeSlider-handle-l, .RangeSlider-handle-r)::after {
  border-color: var(--color-range-slider-handle-border-disabled);
}

.Scrollbox-v-n,
.Scrollbox-v-l,
.Scrollbox-h-n,
.Scrollbox-h-l {
  scrollbar-width: thin; /* not all browsers (any?) support px width */
  scrollbar-width: var(--style-scrollbar-w);
  scrollbar-color: var(--color-scrollbar-thumb) transparent;
}

:is(
  .Scrollbox-v-n,
  .Scrollbox-v-l,
  .Scrollbox-h-n,
  .Scrollbox-h-l
) > * {
  flex-shrink: 0;
}

.Scrollbox-v-n,
.Scrollbox-v-l {
  overflow-y: auto;
  overflow-x: hidden;
}

.Scrollbox-h-n,
.Scrollbox-h-l {
  overflow-x: auto;
  overflow-y: hidden;
}

.Scrollbox-v-n::-webkit-scrollbar,
.Scrollbox-h-n::-webkit-scrollbar,
.Scrollbox-v-l::-webkit-scrollbar,
.Scrollbox-h-l::-webkit-scrollbar {
  background: transparent;
}

.Scrollbox-v-n::-webkit-scrollbar-track,
.Scrollbox-h-n::-webkit-scrollbar-track,
.Scrollbox-v-l::-webkit-scrollbar-track,
.Scrollbox-h-l::-webkit-scrollbar-track {
  background-clip: padding-box;
  background-color: var(--color-scrollbar-inline-track);
}

.Scrollbox-v-n::-webkit-scrollbar-thumb,
.Scrollbox-h-n::-webkit-scrollbar-thumb,
.Scrollbox-v-l::-webkit-scrollbar-thumb,
.Scrollbox-h-l::-webkit-scrollbar-thumb {
  background-clip: padding-box;
  background-color: var(--color-scrollbar-thumb);
}

.Scrollbox-v-n::-webkit-scrollbar,
.Scrollbox-h-n::-webkit-scrollbar {
  width: var(--style-scrollbar-track-w-n);
  height: var(--style-scrollbar-track-w-n);
}

.Scrollbox-v-l::-webkit-scrollbar,
.Scrollbox-h-l::-webkit-scrollbar {
  width: var(--style-scrollbar-track-w-l);
  height: var(--style-scrollbar-track-w-l);
}

/* Vertical scrollboxes */

.Scrollbox-v-n::-webkit-scrollbar-track,
.Scrollbox-v-n::-webkit-scrollbar-thumb {
  border-left: var(--style-scrollbar-padding-n) solid transparent;
}

.Scrollbox-v-l::-webkit-scrollbar-track,
.Scrollbox-v-l::-webkit-scrollbar-thumb {
  border-left: var(--style-scrollbar-padding-l) solid transparent;
}

/* Horizontal scrollboxes */

.Scrollbox-h-n::-webkit-scrollbar-track,
.Scrollbox-h-n::-webkit-scrollbar-thumb {
  border-top: var(--style-scrollbar-padding-n) solid transparent;
}

.Scrollbox-h-l::-webkit-scrollbar-track,
.Scrollbox-h-l::-webkit-scrollbar-thumb {
  border-top: var(--style-scrollbar-padding-l) solid transparent;
}

cm-sidebar {
  --sidebar-extras-max-width: 40rem;
  --sidebar-width-without-toolbar: calc(100vw - var(--style-sidebar-width));
  --sidebar-extras-width: min(var(--sidebar-extras-max-width), var(--sidebar-width-without-toolbar));
  --color-sidebar-active-toggle-bg: var(--color-primary-darkest-purple);
  --style-popup-gap: var(--style-gap-xl);
  position: fixed;
  top: 0;
  bottom: 0;
  right: 0;
  z-index: 3;
  width: auto;
  max-width: calc(100vw - var(--style-sidebar-width));
  background-color: var(--color-sidebar-bg);
}

.Sidebar-extras {
  color: var(--color-text);
  width: 0;
  min-height: 100%;
  display: flex;
  flex-direction: column;
  gap: var(--style-gap-n);
  border-left: 1px solid var(--color-sidebar-separator);
  transition: width var(--style-animation-speed-fast);
}

.Sidebar-extras > * {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  width: var(--sidebar-extras-width);
  padding: var(--style-sidebar-content-padding);
}

cm-sidebar[open] .Sidebar-extras,
.Sidebar-extras:focus-within {
  width: var(--sidebar-extras-width);
}

.Sidebar-toolbar {
  background-color: var(--color-sidebar-bg);
  width: var(--style-sidebar-width);
  padding: var(--style-sidebar-padding);
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: var(--style-sidebar-padding);
  position: absolute;
  top: 0;
  bottom: 0;
  right: 100%;
}

.Sidebar-toggle-button,
.Sidebar-button {
  color: var(--color-primary-white);
  border-radius: var(--style-corner-default);
  background: transparent;
  border: none;
  padding: var(--style-gap-s);
  cursor: pointer;
  max-width: max-content;
  max-height: max-content;
  flex-shrink: 0;
  transition: background-color var(--style-animation-speed-normal);
}

.Sidebar-toggle-active,
.Sidebar-toolbar details[open] > .Sidebar-button {
  background-color: var(--color-sidebar-active-toggle-bg);
}

cm-popup[open] > .Sidebar-button {
  background-color: var(--color-sidebar-active-btn-bg);
  border-radius: var(--style-corner-default);
}

.Sidebar-separator {
  border-radius: 1px;
  border: none;
  display: block;
  width: 100%;
  height: 1px;
  background: var(--color-sidebar-separator);
  flex-shrink: 0;
}

.Sidebar-spacer {
  display: block;
  height: 100%;
  flex-grow: 1;
  border: none;
}

cm-table {
  --table-width: calc(100vw - 4 * var(--style-panel-padding) - var(--style-sidebar-width));
  --table-first-col-width: 0;
  display: block;
  width: 100%;
  overflow-x: auto;
}

cm-table table {
  font-size: var(--text-table-main);
  border-collapse: collapse;
  min-width: 100%;
}

cm-table thead {
  --table-pos-adjust: 0;
  position: relative;
  z-index: 1;
  transform: translateY(var(--table-pos-adjust));
}

cm-table tr > * {
  padding: var(--style-table-padding);
  text-align: right;
  vertical-align: middle;
  white-space: nowrap;
  min-width: var(--table-width);
  color: var(--color-text);
  transition: color var(--style-animation-speed-normal);
}

cm-table tr > :first-child {
  text-align: left;
}

@media screen and (min-width: 412px) {
  cm-table tr > * {
    min-width: calc(var(--table-width) / 2);
  }
}

@media screen and (min-width: 712px) {
  cm-table tr > * {
    min-width: auto;
  }
}

cm-table thead th {
  height: var(--style-table-header-height);
}

cm-table tbody > tr > * {
  border-bottom: 1px solid var(--color-table-border);
  height: var(--style-table-cell-height);
  background-color: var(--color-table-cell-background);
  transition:
    box-shadow var(--style-animation-speed-normal),
    color var(--style-animation-speed-normal),
    border-color var(--style-animation-speed-normal),
    background-color var(--style-animation-speed-normal);
}

cm-table[numeric] tbody > tr > * {
  font-family: var(--text-table-numeric-cell-font);
}

cm-table thead th {
  background-color: var(--color-table-header-background);
  transition: color var(--style-animation-speed-normal), background-color var(--style-animation-speed-normal);
}

cm-table.Scrollbox-h-n {
  scroll-snap-type: x mandatory;
}

cm-table.Scrollbox-h-n tbody :is(th, td) {
  scroll-snap-align: start;
}

@media screen and (min-width: 412px) {
  cm-table[sticky-col] th:first-child {
    position: sticky;
    left: -1px; /* if we place it at 0, elements below show on the left edge for some reason */
  }

  cm-table[sticky-col] thead th:first-child {
    /* HACK: using box-shadow instead of a border because the border will be scrolled with the cell instead of staying sticky */
    box-shadow: inset -1px 0 0 var(--color-table-header-border);
  }

  cm-table[sticky-col] tbody :is(td, th):first-child {
    /* HACK: using box-shadow instead of a border because the border will be scrolled with the cell instead of staying sticky */
    box-shadow: inset -1px 0 0 var(--color-table-border);
  }

  cm-table[sticky-col].Scrollbox-h-n {
    scroll-padding-left: var(--table-first-col-width);
  }
}

.Table-right-align {
  text-align: right;
}

.Table-left-align {
  text-align: left;
}

.Table-center-align {
  text-align: center;
}

.Tabs {
  display: flex;
  align-items: flex-start;
  gap: 0;
}

.Tabs > input {
  position: absolute;
  width: 0;
  height: 0;
  opacity: 0;
}

.Tabs > label {
  background: transparent;
  border: none;
  border-top: 1px solid transparent;
  border-bottom: 1px solid var(--color-line);
  padding: var(--style-gap-xl) calc(var(--style-gap-xl) + 1px); /* comp for border missing */
  display: inline-flex;
  justify-content: center;
  align-items: center;
  gap: var(--style-gap-n);
  flex-grow: 1;
  height: 2.5em;
  color: var(--color-label-muted);
  cursor: pointer;
  transition:
    color var(--style-animation-speed-fast),
    border var(--style-animation-speed-fast);
}

.Tabs input:focus + label,
.Tabs label:hover {
  color: var(--color-label-default);
}

.Tabs > input:checked + label {
  border-top-right-radius: var(--style-corner-default);
  border-top-left-radius: var(--style-corner-default);
  border: 1px solid var(--color-line);
  padding: var(--style-gap-xl);
  border-bottom-color: transparent;
  color: var(--color-label-default);
  cursor: default;
}

.Tag-primary,
.Tag-done,
.Tag-success,
.Tag-warning,
.Tag-error,
.Tag-info,
.Tag-muted,
.Tag-primary-l,
.Tag-done-l,
.Tag-success-l,
.Tag-warning-l,
.Tag-error-l,
.Tag-info-l,
.Tag-muted-l {
  display: inline-flex;
  align-items: center;
  gap: var(--style-gap-s);
  border-radius: var(--style-corner-default);
  flex-shrink: 0;
  max-width: max-content;
  height: 2em;
  padding: 0 0.5em;
}

.Tag-primary,
.Tag-done,
.Tag-success,
.Tag-warning,
.Tag-error,
.Tag-info,
.Tag-muted {
  font-size: var(--text-size-s);
}

:is(
  .Tag-primary,
  .Tag-done,
  .Tag-success,
  .Tag-warning,
  .Tag-error,
  .Tag-info,
  .Tag-muted,
  .Tag-primary-l,
  .Tag-done-l,
  .Tag-success-l,
  .Tag-warning-l,
  .Tag-error-l,
  .Tag-info-l,
  .Tag-muted-l
) > :is(
  cm-icon:last-child,
  :last-child > cm-icon:last-child,
  cm-color-icon:last-child,
  :last-child > cm-color-icon:last-child
) {
  margin-right: -0.25em;
}

:is(
  .Tag-primary,
  .Tag-done,
  .Tag-success,
  .Tag-warning,
  .Tag-error,
  .Tag-info,
  .Tag-muted,
  .Tag-primary-l,
  .Tag-done-l,
  .Tag-success-l,
  .Tag-warning-l,
  .Tag-error-l,
  .Tag-info-l,
  .Tag-muted-l
) > :is(
  cm-icon:first-child,
  :first-child > cm-icon:first-child,
  cm-color-icon:first-child,
  :first-child > cm-color-icon:first-child
) {
  margin-left: -0.25em;
}

.Tag-primary, .Tag-primary-l {
  background-color: var(--color-face-inverse);
  color: var(--color-label-inverse);
}

.Tag-done, .Tag-done-l,
.Tag-success, .Tag-success-l,
.Tag-warning, .Tag-warning-l,
.Tag-info, .Tag-info-l,
.Tag-muted, .Tag-muted-l {
  color: var(--color-label-always-dark-purple);
}

.Tag-done, .Tag-done-l {
  background-color: var(--color-face-done);
}

.Tag-success, .Tag-success-l {
  background-color: var(--color-face-success);
}

.Tag-warning, .Tag-warning-l {
  background-color: var(--color-face-warning);
}

.Tag-error, .Tag-error-l {
  background-color: var(--color-face-error);
  color: var(--color-label-always-white);
}

.Tag-info, .Tag-info-l {
  background-color: var(--color-face-info);
}

.Tag-muted, .Tag-muted-l {
  background-color: var(--color-face-muted-opaque);
}

.Text-content h1,
.Text-heading-1 {
  font-size: var(--text-size-xxxl);
  font-weight: var(--text-weight-bold);
}

.Text-page-title,
.Text-content h2,
.Text-heading-2 {
  font-size: var(--text-size-xxl);
  font-weight: var(--text-weight-bold);
}

.Text-content h3,
.Text-heading-3 {
  font-size: var(--text-size-xl);
  font-weight: var(--text-weight-bold);
}

.Text-content h4,
.Text-page-subtitle,
.Text-heading-4 {
  font-size: var(--text-size-l);
  text-transform: uppercase;
}

.Text-content h5,
.Text-heading-5 {
  font-size: var(--text-size-n);
  font-weight: var(--text-weight-bold);
}

.Text-content h6,
.Text-heading-6,
cm-table thead th,
.Input-label > :not(input, select, textarea, .Input-with-icon) {
  font-size: var(--text-size-s);
  font-weight: var(--text-weight-bold);
  text-transform: uppercase;
}

.Text-bold {
  font-weight: var(--text-weight-bold);
}

.Text-large {
  font-size: var(--text-size-l);
}

.Text-regular {
  font-size: var(--text-size-n);
}

.Text-small {
  font-size: var(--text-size-s);
}

.Text-link {
  color: var(--color-link);
  text-decoration: underline;
  border: none;
  background: none;
  width: max-content;
}

.Text-content > :is(
  p,
  pre,
  h1,
  h2,
  h3,
  h4,
  h5,
  ul,
  ol
) {
  margin-bottom: var(--text-size-xl);
}

p,
.Text-content :is(
  p,
  pre,
  h1,
  h2,
  h3,
  h4,
  h5
) {
  line-height: 1.5;
}

.Text-content > :last-child {
  margin-bottom: 0;
}

.Text-content pre {
  border: var(--style-separator-line-light);
  border-radius: var(--style-corner-default);
  padding: var(--style-gap-n);
}

.Text-code,
.Text-content code {
  font-family: 'Ubuntu Mono', monospace;
}

.Text-content ul > li,
.Text-list > li,
.Text-list-item {
  padding-left: var(--text-list-padding);
  position: relative;
  margin-bottom: var(--style-gap-s);
}

.Text-content ul > li:before,
.Text-list > li:before,
.Text-list-item:before {
  content: '';
  display: block;
  position: absolute;
  width: var(--text-size-n);
  height: calc(var(--style-border-width) * 2);
  border-radius: var(--style-border-width);
  background-color: var(--color-text);
  left: var(--style-gap-s);
  top: calc(var(--text-size-n) * 0.6);
}

cm-toast-list {
  position: fixed;
  bottom: var(--style-gap-xxxl);
  margin: 0 auto;
  left: var(--style-gap-xl);
  right: var(--style-gap-xl);
  display: flex;
  flex-direction: column;
  gap: var(--style-gap-n);
}

@media screen and (min-width: 960px) {
  cm-toast-list {
    left: auto;
    margin: 0;
    right: var(--style-gap-xl);
    align-items: flex-end;
  }
}

cm-toast {
  display: block;
  max-height: 0;
  transition:
    max-height var(--style-animation-speed-slow),
    opacity var(--style-animation-speed-slow);
  overflow: hidden;
}

.Toast-info,
.Toast-error,
.Toast-warning,
.Toast-success {
  flex-grow: 0;
  display: flex;
  gap: var(--style-gap-xl);
  align-items: center;
  padding: var(--style-gap-n);
  border-style: solid;
  border-width: var(--style-border-width);
  border-radius: var(--style-corner-default);
  z-index: 2;
}

@media screen and (min-width: 960px) {
  cm-toast > :first-child {
    transform: translateX(100%);
    transition: transform var(--style-animation-speed-slow);
  }
}

.Toast-shown {
  max-height: 4rem;
}

.Toast-shown > :first-child {
  transform: none;
}

.Toast-clear {
  opacity: 0;
  max-height: 0;
}

:is(
  .Toast-info,
  .Toast-success,
  .Toast-warning,
  .Toast-error
) > cm-icon:first-child {
  margin-left: 4px;
}

.Toast-separator {
  display: block;
  height: 32px;
  width: 1px;
  border-radius: 0.5px;
  border: none;
  flex-shrink: 0;
  flex-grow: 0;
}

.Toast-info,
.Toast-success,
.Toast-warning {
  color: var(--color-label-always-dark-purple);
}

.Toast-info {
  background-color: var(--color-face-info);
  border-color: var(--color-border-info);
  box-shadow: inset 0 -1px 0 var(--color-border-info);
}

.Toast-info > .Toast-separator {
  background-color: var(--color-border-info);
}

.Toast-success {
  background-color: var(--color-face-success);
  border-color: var(--color-border-success);
  box-shadow: inset 0 -1px 0 var(--color-border-success);
}

.Toast-success > .Toast-separator {
  background-color: var(--color-border-success);
}

.Toast-warning {
  background-color: var(--color-face-warning);
  border-color: var(--color-border-warning);
  box-shadow: inset 0 -1px 0 var(--color-border-warning);
}

.Toast-warning > .Toast-separator {
  background-color: var(--color-border-warning);
}

.Toast-error {
  background-color: var(--color-face-error);
  border-color: var(--color-border-error);
  box-shadow: inset 0 -1px 0 var(--color-border-error);
  color: var(--color-label-always-white);
}

.Toast-error > .Toast-separator {
  background-color: var(--color-border-error);
}

.Toast-title {
  font-weight: var(--text-weight-bold);
  flex-shrink: 0;
}

.Toast-content {
  width: 100%;
  flex-grow: 1;
}

.ButtonGroup {
  display: inline-block;
}

.ButtonGroup {
  display: inline-flex;
}

.ButtonGroup > input {
  position: absolute;
  opacity: 0;
  width: 0;
  height: 0;
}

.ButtonGroup > :is(
.Button:hover,
input:focus + .Button
) {
  z-index: 1;
}

.ButtonGroup > .Button:not(:first-of-type) {
  margin-left: -1px; /* collapse borders */
}

.ButtonGroup > .Button:not(:first-of-type):not(:last-of-type) {
  border-radius: 0;
}

.ButtonGroup > .Button:last-of-type {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.ButtonGroup > .Button:first-of-type {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

cm-copy {
  display: inline-block;
  vertical-align: middle;
}

cm-calendar-icon[disabled] {
  pointer-events: none;
}

.Calendar {
  --calendar-date-btn-width: 4ch;
  --calendar-width: calc(7 * var(--calendar-date-btn-width) + 6 * var(--style-gap-n));
  --color-calendar-button-label: var(--color-label-default);
  --color-calendar-today-face: var(--color-face-info);
  --color-calendar-today-attn-face: var(--color-face-attn-info);
  --color-calendar-today-label: var(--color-label-always-dark-purple);
  --color-calendar-selected-today-label: var(--color-secondary-blue);
  --color-calendar-extra-label: var(--color-label-muted);
  --color-calendar-limit-face: var(--color-primary-purple);
  --color-calendar-limit-label: var(--color-primary-lighter-purple);
  --color-calendar-range-face: var(--color-primary-new-purple);
  --color-calendar-range-label: var(--color-label-always-dark-purple);
  --calendar-date-attn-face: var(--color-primary-lighter-purple);
  --calendar-date-attn-label: var(--color-primary-dark-purple);
  --color-calendar-extra-range-label: var(--color-primary-medium-purple);
  max-width: max-content;
  display: flex;
  flex-direction: column;
  gap: var(--style-gap-n);
  position: relative;
  overflow: hidden;
  padding: 3px;
}

.Calendar header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: var(--style-gap-n);
}

.Calendar button[data-mode] {
  flex-grow: 1;
  flex-basis: 0;
}

.Calendar-months, .Calendar-years {
  padding: 3px;
  display: flex;
  flex-wrap: wrap;
  gap: var(--style-gap-n);
}

.Calendar-dates table {
  border-collapse: collapse;
}

.Calendar-dates :is(td, th) {
  height: var(--calendar-date-btn-width);
}

.Calendar-sunday {
  color: var(--color-secondary-dark-red);
}

.Calendar-saturday {
  color: var(--color-secondary-dark-blue);
}

.Calendar-date, .Calendar-month, .Calendar-year {
  border-radius: var(--style-corner-default);
  border: 1px solid transparent;
  background: transparent;
}

.Calendar-date {
  font-family: var(--text-monospace-font);
  width: var(--calendar-date-btn-width);
  height: var(--calendar-date-btn-width);
  color: var(--color-calendar-button-label);
  transition: color var(--style-animation-speed-normal), background-color var(--style-animation-speed-normal);
}

.Calendar-header {
  color: var(--color-text);
  transition: color var(--style-animation-speed-normal);
}

:is(.Calendar-date, .Calendar-month, .Calendar-year):is(:hover, :focus) {
  background-color: var(--calendar-date-attn-face);
  color: var(--calendar-date-attn-label);
}

.Calendar-month, .Calendar-year {
  color: var(--color-label-default);
  transition: background-color var(--style-animation-speed-normal);
  width: calc((100% - 2 * var(--style-gap-n)) / 3);
}

.Calendar-month {
  padding: 1.3em 0;
}

.Calendar-year {
  padding: 0.5em 0;
}

/** Date button styles */

.Calendar-extra,
.Calendar-date:disabled,
.Calendar-date:disabled:is(:hover, :focus) {
  color: var(--color-calendar-extra-label);
}

.Calendar-date:disabled,
.Calendar-date:disabled:is(:hover, :focus) {
  background-color: transparent;
}

.Calendar-range {
  background-color: var(--color-calendar-range-face);
  color: var(--color-calendar-range-label);
  border-radius: 0;
}

.Calendar-range-to-left {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.Calendar-range-to-right {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.Calendar-range-to-left.Calendar-range-to-right {
  border-radius: var(--style-corner-default);
}

.Calendar-range.Calendar-extra {
  color: var(--color-calendar-extra-range-label);
}

.Calendar-today {
  background-color: var(--color-calendar-today-face);
  color: var(--color-calendar-today-label);
}

.Calendar-today:hover {
  background-color: var(--color-calendar-today-attn-face);
}

.Calendar-limit,
.Calendar-limit:disabled,
.Calendar-limit:is(:focus, :hover) {
  background-color: var(--color-calendar-limit-face);
  color: var(--color-calendar-limit-label);
}

.Calendar-selected,
.Calendar-selected:is(:hover, :focus) {
  background-color: var(--color-face-inverse);
  color: var(--color-label-inverse);
}

.Calendar-today:is(.Calendar-selected, .Calendar-limit) {
  color: var(--color-calendar-selected-today-label);
}


/** Calendar mode switching */

.Calendar-dates {
  transition: all var(--style-animation-speed-normal) var(--style-animation-speed-normal);
}

.Calendar[data-mode] .Calendar-dates {
  opacity: 0;
  transition-delay: unset;
  animation: delay-hide var(--style-animation-speed-normal) forwards;
  pointer-events: none;
}

.Calendar-months, .Calendar-years {
  position: absolute;
  top: 3rem;
  right: 0;
  left: 0;
  transition: opacity var(--style-animation-speed-normal);
  animation: delay-hide calc(var(--style-animation-speed-normal) * 2) forwards;
  opacity: 0;
  pointer-events: none;
}

.Calendar[data-mode='month'] .Calendar-months,
.Calendar[data-mode='year'] .Calendar-years {
  opacity: 1;
  animation: none;
  transition-delay: var(--style-animation-speed-normal);
  pointer-events: unset;
}

@keyframes delay-hide {
  to { visibility: hidden; }
}

